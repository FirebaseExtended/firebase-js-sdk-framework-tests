"""
✨ `Post_KeyOutput` returns the primary key fields of table type `Post`.

It has the same format as `Post_Key`, but is only used as mutation return value.
"""
scalar Post_KeyOutput
"""
✨ Generated data input type for table 'Post'. It includes all necessary fields for creating or upserting rows into table.
"""
input Post_Data {
  """
  ✨ Generated from Field `Post`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Post`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Post`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Post`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Post`.`testId` of type `String!`
  """
  testId: String
  """
  ✨ `_expr` server value variant of `testId` (✨ Generated from Field `Post`.`testId` of type `String!`)
  """
  testId_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Post'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Post_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Post_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Post_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Post_Filter!]
  """
  ✨ Generated from Field `Post`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Post`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Post`.`testId` of type `String!`
  """
  testId: String_Filter
}
"""
✨ Generated first-row input type for table 'Post'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Post_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Post_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Post_Filter
}
"""
✨ Generated having input type for table 'Post'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Post_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Post_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Post_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Post_Having!]
  """
  ✨ Generated from Field `Post`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Post`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Post`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Post`.`testId_count` of type `Int!`
  """
  testId_count: Int_Filter
}
"""
✨ Generated key input type for table 'Post'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Post_Key {
  """
  ✨ Generated from Field `Post`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Post`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Post'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Post_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Post_Filter
}
"""
✨ Generated order input type for table 'Post'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Post_Order {
  """
  ✨ Generated from Field `Post`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Post`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Post`.`testId` of type `String!`
  """
  testId: OrderDirection
}
