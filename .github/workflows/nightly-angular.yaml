# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Firebase JS SDK Angular Nightly

on:
  schedule:
    - cron: "0 0 * * *" # Nightly
  pull_request:
    branches:
      - main
    paths: # Only run if files in these paths change
      - 'packages/angular/**'
      - '.github/workflows/nightly-angular-sdk.yaml'
      - 'package.json' # Root package.json
      - 'lerna.json'
      - 'yarn.lock'
  workflow_dispatch:

jobs:
  angular-tests:
    name: Angular Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Set up Node (20)
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'yarn'
        cache-dependency-path: yarn.lock # Root yarn.lock

    - name: Install Monorepo Dependencies (Lerna & Yarn Workspaces)
      run: yarn install --frozen-lockfile
      working-directory: ./ # Run yarn install from the root

    # Placeholder for any Angular specific setup if needed in the future
    # - name: Setup Angular Environment (if needed)
    #   run: |
    #     echo "Angular environment setup placeholder"

    # Caching for Angular build outputs (e.g., .angular/cache)
    # This might need adjustment based on actual Angular build outputs and practices
    - name: Restore Angular build cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/packages/angular/.angular/cache
        key: ${{ runner.os }}-angular-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('packages/angular/**/*.ts', 'packages/angular/**/*.html') }}
        restore-keys: |
          ${{ runner.os }}-angular-build-${{ hashFiles('**/yarn.lock') }}-

    - name: Lint Angular App
      run: yarn lerna run lint --scope @firebase-sdk-nextjs-tests/angular
      # Or use: yarn run lint:angular
      working-directory: ./ # Run lerna from the root

    # The placeholder 'build' script in packages/angular/package.json will just echo and pass.
    # Replace with actual build command if/when implemented: e.g., yarn lerna run build --scope @firebase-sdk-nextjs-tests/angular
    - name: Build Angular App (Placeholder)
      run: yarn lerna run build --scope @firebase-sdk-nextjs-tests/angular
      # Or use: yarn run build:angular
      working-directory: ./

    # The placeholder 'test' script in packages/angular/package.json will just echo and pass.
    # Replace with actual test command if/when implemented: e.g., yarn lerna run test --scope @firebase-sdk-nextjs-tests/angular
    - name: Run Angular Tests (Placeholder)
      run: yarn lerna run test --scope @firebase-sdk-nextjs-tests/angular
      # Or use: yarn run test:angular
      working-directory: ./

    # Add a step for sending email on failure, similar to the nextjs workflow, if desired for Angular tests.
    # For now, omitting it as the tests are placeholders.
    # - name: Send email on failure
    #   if: failure() && github.event_name == 'schedule'
    #   uses: ./.github/actions/send-email
    #   with:
    #     api-key: ${{ secrets.OSS_BOT_MAILGUN_KEY }}
    #     domain: ${{ secrets.OSS_BOT_MAILGUN_DOMAIN }}
    #     from: 'GitHub <admin-github@${{ secrets.OSS_BOT_MAILGUN_DOMAIN }}>'
    #     to: YOUR_EMAIL_HERE # Replace with appropriate email
    #     subject: 'Nightly Angular build of ${{github.repository}} failed!'
    #     html: >
    #       <b>The nightly Angular workflow failed on: ${{github.repository}}</b>
    #       <br /><br />Navigate to the
    #       <a href="https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}">failed workflow</a>
    #       to look further into what went wrong.
    #   continue-on-error: true
